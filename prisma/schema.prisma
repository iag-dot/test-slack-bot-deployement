// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id              Int       @id @default(autoincrement())
  taskId          String    @unique
  title           String
  description     String
  priority        String    // "urgent", "high", "medium", "low"
  assigneeId      String    // Slack user ID
  assigneeName    String    // Display name of the assignee
  creatorId       String    // Slack user ID of who created the task
  creatorName     String    // Display name of the creator
  channel         String    // Slack channel ID
  channelName     String?   // Channel name for readability
  client          String?   // Client name derived from channel or provided
  team            String    // "content", "design", "product", "ops"
  createdAt       DateTime  @default(now())
  deadline        DateTime
  status          String    // "pending", "in_progress", "completed"
  completedAt     DateTime?
  completedById   String?   // Slack user ID of who completed the task
  completedByName String?   // Display name of who completed the task
  reminderSent    Boolean   @default(false)
}

model Review {
  id             Int       @id @default(autoincrement())
  reviewId       String    @unique
  title          String    // Title of the item being reviewed
  description    String?   // Additional details
  creatorId      String    // Slack user ID of who created the review
  creatorName    String    // Display name of the creator
  reviewerIds    String[]  // Array of Slack user IDs
  reviewerNames  String[]  // Array of reviewer display names
  channel        String    // Slack channel ID
  channelName    String?   // Channel name for readability
  client         String    // Client name derived from channel or explicitly provided
  url            String?   // Optional link to the item being reviewed
  status         String    // "draft", "design", "in_review", "approved", "published"
  createdAt      DateTime  @default(now())
  deadline       DateTime?
  completedAt    DateTime?
  feedbacks      Feedback[]
}

model Feedback {
  id            Int       @id @default(autoincrement())
  reviewId      Int
  review        Review    @relation(fields: [reviewId], references: [id])
  reviewerId    String    // Slack user ID
  reviewerName  String    // Display name of the reviewer
  comment       String
  status        String    // "requested_changes", "approved"
  createdAt     DateTime  @default(now())
}
model DailyReport {
  id          Int       @id @default(autoincrement())
  date        DateTime  @unique
  teamReports Json      // Structured JSON with team activity
  createdAt   DateTime  @default(now())
}